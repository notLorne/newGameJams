package objects;

import java.util.HashMap;

public class CharTable {
    private static final HashMap<String, String> charTable = new HashMap<>();

    static {
        charTable.put(" ", "00000000000000000000000000000000000");
        charTable.put("_", "00000000000000000000000000000011111");
        charTable.put("(", "00010001000100001000010000010000010");
        charTable.put(")", "01000001000001000010000100010001000");
        charTable.put("-", "00000000000000011111000000000000000");
        charTable.put("+", "00000001000010011111001000010000000");
        charTable.put(".", "00000000000000000000001000101000100");
        charTable.put(",", "00000000000000000000001100001000100");
        charTable.put("!", "00100001000010000100001000000000100");
        charTable.put("?", "01110100011000100010001000000000100");
        charTable.put("/", "00001000100001000100010000100010000");
        charTable.put("0", "01110100011010110101101011000101110");
        charTable.put("1", "00100011001010000100001000010011111");
        charTable.put("2", "01110100010000100010001000100011111");
        charTable.put("3", "11111000100010001110000011000101110");
        charTable.put("4", "00011001010100111111000010000100001");
        charTable.put("5", "11111100001000011110000011000101110");
        charTable.put("6", "01110100011000011110100011000101110");
        charTable.put("7", "11111000010001001100001000010000100");
        charTable.put("8", "01110100011000101110100011000101110");
        charTable.put("9", "01110100011000111111000100010011000");
        charTable.put("E", "11111100001000011110100001000011111");
        charTable.put("e", "00000000000111010001111111000001111");
        charTable.put("T", "11111001000010000100001000010000100");
        charTable.put("t", "01000010000111001000010000100000110");
        charTable.put("A", "01110100011000110001111111000110001");
        charTable.put("a", "00000000000110000010011101001001101");
        charTable.put("O", "01110100011000110001100011000101110");
        charTable.put("o", "00000000000111010001100011000101110");
        charTable.put("I", "01110001000010000100001000010011110");
        charTable.put("i", "00100000000110000100001000010011110");
        charTable.put("N", "10001110011010110011100011000110001");
        charTable.put("n", "00000000001111010001100011000110001");
        charTable.put("S", "01110100011000001110000011000101110");
        charTable.put("s", "00000000000111010000011100000101110");
        charTable.put("H", "10001100011000111111100011000110001");
        charTable.put("h", "10000100001000011110100011000110001");
        charTable.put("R", "11110100011000111110100101000110001");
        charTable.put("r", "00000000001011011001100001000010000");
        charTable.put("D", "11110100011000110001100011000111110");
        charTable.put("d", "00001000010000101111100011000101111");
        charTable.put("L", "10000100001000010000100001000011111");
        charTable.put("l", "11000010000100001000010000100000110");
        charTable.put("C", "01110100011000010000100001000101110");
        charTable.put("c", "00000000000111010001100001000101110");
        charTable.put("U", "10001100011000110001100011000101110");
        charTable.put("u", "00000000001000110001100011001101101");
        charTable.put("M", "11011101011010110101101011000110001");
        charTable.put("m", "00000000001101010101101011010110101");
        charTable.put("W", "10001100011000110101101010101001010");
        charTable.put("w", "00000000001000110001101011010101010");
        charTable.put("F", "11111100001000011110100001000010000");
        charTable.put("f", "01110100011000010000111001000010000");
        charTable.put("G", "01110100011000010111100011000101110");
        charTable.put("g", "01110100011000101111000011000101110");
        charTable.put("Y", "10001100011000101010001000010000100");
        charTable.put("y", "10001100011000110001011110000101110");
        charTable.put("P", "11110100011000111110100001000010000");
        charTable.put("p", "11110100011000110001111101000010000");
        charTable.put("B", "11110100011000111110100011000111110");
        charTable.put("b", "10000100001000011110100011000111110");
        charTable.put("V", "10001100011000110001100010101000100");
        charTable.put("v", "00000000001000110001100010101000100");
        charTable.put("K", "10000100011001011100100101000110001");
        charTable.put("k", "10000100001000110010111001001010001");
        charTable.put("J", "00111000010000100001100011000101110");
        charTable.put("j", "00001000000001100001000011000101110");
        charTable.put("X", "10001100010101000100010101000110001");
        charTable.put("x", "00000000001000101010001000101010001");
        charTable.put("Q", "01110100011000110101101011001001101");
        charTable.put("q", "01111100011000110001011110000100001");
        charTable.put("Z", "11111000010001000100010001000011111");
        charTable.put("z", "00000000001111100010001000100011111");
    }

    public static String getCharString(String character) {
        return charTable.getOrDefault(character, "");
    }
    
}